<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="230" onload="init(evt)" viewBox="0 0 1200 230" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="230.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Schwarz-P Q2 with hypre/CUDA</text>
<text id="details" x="10.00" y="213" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="213" > </text>
<g id="frames">
<g >
<title>VecCUDACopyFrom (4,046 samples, 0.04%)</title><rect x="1188.4" y="165" width="0.5" height="15.0" fill="rgb(212,12,47)" rx="2" ry="2" />
<text  x="1191.39" y="175.5" ></text>
</g>
<g >
<title>VecCopy (9,164 samples, 0.09%)</title><rect x="957.9" y="69" width="1.1" height="15.0" fill="rgb(224,157,34)" rx="2" ry="2" />
<text  x="960.94" y="79.5" ></text>
</g>
<g >
<title>MatSetPreallCOO (722,181 samples, 7.03%)</title><rect x="33.4" y="165" width="83.0" height="15.0" fill="rgb(207,228,51)" rx="2" ry="2" />
<text  x="36.42" y="175.5" >MatSetPre..</text>
</g>
<g >
<title>VecCopy (1,568 samples, 0.02%)</title><rect x="1187.5" y="117" width="0.2" height="15.0" fill="rgb(251,215,48)" rx="2" ry="2" />
<text  x="1190.47" y="127.5" ></text>
</g>
<g >
<title>PCApply (4,393,310 samples, 42.77%)</title><rect x="167.2" y="117" width="504.7" height="15.0" fill="rgb(225,37,27)" rx="2" ry="2" />
<text  x="170.22" y="127.5" >PCApply</text>
</g>
<g >
<title>KSPSetUp (1,001,877 samples, 9.75%)</title><rect x="847.5" y="101" width="115.1" height="15.0" fill="rgb(229,3,30)" rx="2" ry="2" />
<text  x="850.52" y="111.5" >KSPSetUp</text>
</g>
<g >
<title>PCSetUp (1,437,885 samples, 14.00%)</title><rect x="682.3" y="101" width="165.2" height="15.0" fill="rgb(221,190,24)" rx="2" ry="2" />
<text  x="685.34" y="111.5" >PCSetUp</text>
</g>
<g >
<title>MatMult (415,219 samples, 4.04%)</title><rect x="200.4" y="69" width="47.7" height="15.0" fill="rgb(215,68,17)" rx="2" ry="2" />
<text  x="203.38" y="79.5" >MatM..</text>
</g>
<g >
<title>MatMultTranspose (59,176 samples, 0.58%; 0.00%)</title><rect x="193.6" y="85" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="196.59" y="95.5" ></text>
</g>
<g >
<title>TSJacobianEval (1,425,575 samples, 13.88%)</title><rect x="1014.5" y="117" width="163.8" height="15.0" fill="rgb(251,211,39)" rx="2" ry="2" />
<text  x="1017.54" y="127.5" >TSJacobianEval</text>
</g>
<g >
<title>VecAYPX (20,189 samples, 0.20%)</title><rect x="674.9" y="117" width="2.4" height="15.0" fill="rgb(249,124,24)" rx="2" ry="2" />
<text  x="677.94" y="127.5" ></text>
</g>
<g >
<title>PCApply (240,387 samples, 2.34%)</title><rect x="897.4" y="69" width="27.6" height="15.0" fill="rgb(224,177,27)" rx="2" ry="2" />
<text  x="900.36" y="79.5" >P..</text>
</g>
<g >
<title>SFReduceBegin (1,992 samples, 0.02%)</title><rect x="116.4" y="165" width="0.2" height="15.0" fill="rgb(238,181,33)" rx="2" ry="2" />
<text  x="119.38" y="175.5" ></text>
</g>
<g >
<title>VecAYPX (227,229 samples, 2.21%)</title><rect x="644.6" y="69" width="26.1" height="15.0" fill="rgb(211,110,11)" rx="2" ry="2" />
<text  x="647.55" y="79.5" >V..</text>
</g>
<g >
<title>VecNorm (11,639 samples, 0.11%)</title><rect x="959.0" y="69" width="1.3" height="15.0" fill="rgb(208,149,39)" rx="2" ry="2" />
<text  x="961.99" y="79.5" ></text>
</g>
<g >
<title>TSFunctionEval (74,729 samples, 0.73%)</title><rect x="1178.5" y="101" width="8.6" height="15.0" fill="rgb(221,135,54)" rx="2" ry="2" />
<text  x="1181.49" y="111.5" ></text>
</g>
<g >
<title>KSPSolve (2,563,046 samples, 24.95%)</title><rect x="377.5" y="85" width="294.4" height="15.0" fill="rgb(241,81,40)" rx="2" ry="2" />
<text  x="380.47" y="95.5" >KSPSolve</text>
</g>
<g >
<title>DualSpaceSetUp (11,182 samples, 0.11%)</title><rect x="14.7" y="149" width="1.3" height="15.0" fill="rgb(224,166,30)" rx="2" ry="2" />
<text  x="17.70" y="159.5" ></text>
</g>
<g >
<title>MatMultTranspose (122,904 samples, 1.20%; 0.00%)</title><rect x="962.6" y="117" width="14.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="965.60" y="127.5" ></text>
</g>
<g >
<title>PCSetUp (2,572,990 samples, 25.05%)</title><rect x="681.7" y="133" width="295.5" height="15.0" fill="rgb(205,41,9)" rx="2" ry="2" />
<text  x="684.67" y="143.5" >PCSetUp</text>
</g>
<g >
<title>SFSetUp (19,468 samples, 0.19%)</title><rect x="119.2" y="165" width="2.2" height="15.0" fill="rgb(213,171,23)" rx="2" ry="2" />
<text  x="122.15" y="175.5" ></text>
</g>
<g >
<title>RatelRestrict 1 (1,848 samples, 0.02%)</title><rect x="976.5" y="101" width="0.2" height="15.0" fill="rgb(218,55,20)" rx="2" ry="2" />
<text  x="979.51" y="111.5" ></text>
</g>
<g >
<title>RatelJacobianApp (415,219 samples, 4.04%)</title><rect x="200.4" y="53" width="47.7" height="15.0" fill="rgb(223,72,3)" rx="2" ry="2" />
<text  x="203.38" y="63.5" >Rate..</text>
</g>
<g >
<title>MatSetValuesCOO (123,243 samples, 1.20%)</title><rect x="1164.1" y="85" width="14.2" height="15.0" fill="rgb(221,7,48)" rx="2" ry="2" />
<text  x="1167.14" y="95.5" ></text>
</g>
<g >
<title>KSPSolve (1,090,167 samples, 10.61%)</title><rect x="252.2" y="85" width="125.3" height="15.0" fill="rgb(236,155,16)" rx="2" ry="2" />
<text  x="255.24" y="95.5" >KSPSolve</text>
</g>
<g >
<title>SFReduceBegin (4,868 samples, 0.05%)</title><rect x="615.4" y="37" width="0.6" height="15.0" fill="rgb(217,18,10)" rx="2" ry="2" />
<text  x="618.43" y="47.5" ></text>
</g>
<g >
<title>RatelRestrict (121,056 samples, 1.18%; +1.09%)</title><rect x="962.6" y="101" width="13.9" height="15.0" fill="rgb(255,8,8)" rx="2" ry="2" />
<text  x="965.60" y="111.5" ></text>
</g>
<g >
<title>SNESFunctionEval (324,735 samples, 3.16%)</title><rect x="977.2" y="133" width="37.3" height="15.0" fill="rgb(244,140,54)" rx="2" ry="2" />
<text  x="980.23" y="143.5" >SNE..</text>
</g>
<g >
<title>RatelJacobianApp (411,065 samples, 4.00%)</title><rect x="850.1" y="53" width="47.3" height="15.0" fill="rgb(253,132,10)" rx="2" ry="2" />
<text  x="853.14" y="63.5" >Rate..</text>
</g>
<g >
<title>VecTDot (19,831 samples, 0.19%)</title><rect x="960.3" y="69" width="2.3" height="15.0" fill="rgb(220,136,16)" rx="2" ry="2" />
<text  x="963.33" y="79.5" ></text>
</g>
<g >
<title>MGResid Level 1 (451,408 samples, 4.39%)</title><rect x="200.4" y="101" width="51.8" height="15.0" fill="rgb(222,103,32)" rx="2" ry="2" />
<text  x="203.38" y="111.5" >MGRes..</text>
</g>
<g >
<title>MatAssemblyEnd (20,478 samples, 0.20%)</title><rect x="36.7" y="149" width="2.4" height="15.0" fill="rgb(251,26,16)" rx="2" ry="2" />
<text  x="39.71" y="159.5" ></text>
</g>
<g >
<title>SFSetGraph (22,165 samples, 0.22%)</title><rect x="116.6" y="165" width="2.6" height="15.0" fill="rgb(226,92,50)" rx="2" ry="2" />
<text  x="119.61" y="175.5" ></text>
</g>
<g >
<title>KSPSolve (979,046 samples, 9.53%)</title><rect x="850.1" y="85" width="112.5" height="15.0" fill="rgb(246,210,45)" rx="2" ry="2" />
<text  x="853.14" y="95.5" >KSPSolve</text>
</g>
<g >
<title>DMPlexStratify (2,814 samples, 0.03%)</title><rect x="11.7" y="165" width="0.3" height="15.0" fill="rgb(243,58,17)" rx="2" ry="2" />
<text  x="14.65" y="175.5" ></text>
</g>
<g >
<title>MatResidual (451,408 samples, 4.39%)</title><rect x="200.4" y="85" width="51.8" height="15.0" fill="rgb(238,114,53)" rx="2" ry="2" />
<text  x="203.38" y="95.5" >MatRe..</text>
</g>
<g >
<title>PCApply (1,088,369 samples, 10.60%)</title><rect x="252.4" y="69" width="125.1" height="15.0" fill="rgb(214,35,26)" rx="2" ry="2" />
<text  x="255.45" y="79.5" >PCApply</text>
</g>
<g >
<title>MatAssemblyEnd (2,020 samples, 0.02%)</title><rect x="1163.9" y="85" width="0.2" height="15.0" fill="rgb(227,35,15)" rx="2" ry="2" />
<text  x="1166.91" y="95.5" ></text>
</g>
<g >
<title>VecTDot (38,357 samples, 0.37%)</title><rect x="677.3" y="117" width="4.4" height="15.0" fill="rgb(252,106,33)" rx="2" ry="2" />
<text  x="680.26" y="127.5" ></text>
</g>
<g >
<title>MatMult (192,111 samples, 1.87%; 0.00%)</title><rect x="168.4" y="69" width="22.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="171.37" y="79.5" >M..</text>
</g>
<g >
<title>VecReduceArith (4,461 samples, 0.04%)</title><rect x="1187.9" y="117" width="0.5" height="15.0" fill="rgb(232,218,45)" rx="2" ry="2" />
<text  x="1190.88" y="127.5" ></text>
</g>
<g >
<title>RatelProlong (192,111 samples, 1.87%; +1.13%)</title><rect x="168.4" y="53" width="22.0" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="171.37" y="63.5" >R..</text>
</g>
<g >
<title>TSFunctionEval (324,735 samples, 3.16%)</title><rect x="977.2" y="117" width="37.3" height="15.0" fill="rgb(247,25,2)" rx="2" ry="2" />
<text  x="980.23" y="127.5" >TSF..</text>
</g>
<g >
<title>DMPlexSymmetrize (5,062 samples, 0.05%)</title><rect x="12.0" y="165" width="0.6" height="15.0" fill="rgb(222,35,6)" rx="2" ry="2" />
<text  x="14.98" y="175.5" ></text>
</g>
<g >
<title>VecAXPY (13,950 samples, 0.14%)</title><rect x="955.2" y="69" width="1.6" height="15.0" fill="rgb(206,204,13)" rx="2" ry="2" />
<text  x="958.17" y="79.5" ></text>
</g>
<g >
<title>MatMult (411,065 samples, 4.00%)</title><rect x="850.1" y="69" width="47.3" height="15.0" fill="rgb(237,128,41)" rx="2" ry="2" />
<text  x="853.14" y="79.5" >MatM..</text>
</g>
<g >
<title>SFReduceEnd (2,500 samples, 0.02%)</title><rect x="616.0" y="37" width="0.3" height="15.0" fill="rgb(239,118,29)" rx="2" ry="2" />
<text  x="618.99" y="47.5" ></text>
</g>
<g >
<title>VecAYPX (36,189 samples, 0.35%)</title><rect x="248.1" y="69" width="4.1" height="15.0" fill="rgb(212,175,15)" rx="2" ry="2" />
<text  x="251.08" y="79.5" ></text>
</g>
<g >
<title>SNESFunctionEval (78,174 samples, 0.76%)</title><rect x="1178.5" y="117" width="9.0" height="15.0" fill="rgb(215,55,7)" rx="2" ry="2" />
<text  x="1181.49" y="127.5" ></text>
</g>
<g >
<title>TSStep (9,288,500 samples, 90.42%)</title><rect x="121.4" y="165" width="1067.0" height="15.0" fill="rgb(232,41,7)" rx="2" ry="2" />
<text  x="124.39" y="175.5" >TSStep</text>
</g>
<g >
<title>VecCUDACopyFrom (2,577 samples, 0.03%)</title><rect x="976.9" y="101" width="0.3" height="15.0" fill="rgb(210,150,49)" rx="2" ry="2" />
<text  x="979.94" y="111.5" ></text>
</g>
<g >
<title>VecCUDACopyTo (5,368 samples, 0.05%)</title><rect x="924.4" y="37" width="0.6" height="15.0" fill="rgb(236,191,50)" rx="2" ry="2" />
<text  x="927.36" y="47.5" ></text>
</g>
<g >
<title>MGInterp Level 1 (278,701 samples, 2.71%; 0.00%)</title><rect x="168.4" y="101" width="32.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="171.37" y="111.5" >MG..</text>
</g>
<g >
<title>SFBcastBegin (4,517 samples, 0.04%)</title><rect x="614.6" y="37" width="0.6" height="15.0" fill="rgb(253,29,13)" rx="2" ry="2" />
<text  x="617.63" y="47.5" ></text>
</g>
<g >
<title>SNESLineSearch (87,859 samples, 0.86%)</title><rect x="1178.3" y="133" width="10.1" height="15.0" fill="rgb(250,136,18)" rx="2" ry="2" />
<text  x="1181.30" y="143.5" ></text>
</g>
<g >
<title>RatelRestrict (59,176 samples, 0.58%; +0.05%)</title><rect x="193.6" y="69" width="6.8" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="196.59" y="79.5" ></text>
</g>
<g >
<title>VecPointwiseMult (90,545 samples, 0.88%)</title><rect x="616.5" y="53" width="10.4" height="15.0" fill="rgb(213,211,31)" rx="2" ry="2" />
<text  x="619.51" y="63.5" ></text>
</g>
<g >
<title>VecSet (6,931 samples, 0.07%)</title><rect x="1189.2" y="165" width="0.8" height="15.0" fill="rgb(243,116,47)" rx="2" ry="2" />
<text  x="1192.20" y="175.5" ></text>
</g>
<g >
<title>SFSetUp (1,848 samples, 0.02%)</title><rect x="976.5" y="85" width="0.2" height="15.0" fill="rgb(246,213,53)" rx="2" ry="2" />
<text  x="979.51" y="95.5" ></text>
</g>
<g >
<title>VecAXPY (27,414 samples, 0.27%)</title><rect x="190.4" y="69" width="3.2" height="15.0" fill="rgb(222,159,16)" rx="2" ry="2" />
<text  x="193.44" y="79.5" ></text>
</g>
<g >
<title>DualSpaceSetUp (7,741 samples, 0.08%)</title><rect x="15.1" y="133" width="0.9" height="15.0" fill="rgb(247,106,30)" rx="2" ry="2" />
<text  x="18.10" y="143.5" ></text>
</g>
<g >
<title>PCSetUp (262,872 samples, 2.56%)</title><rect x="925.0" y="69" width="30.2" height="15.0" fill="rgb(243,92,50)" rx="2" ry="2" />
<text  x="927.97" y="79.5" >PC..</text>
</g>
<g >
<title>MGSmooth Level 1 (2,563,046 samples, 24.95%)</title><rect x="377.5" y="101" width="294.4" height="15.0" fill="rgb(221,68,1)" rx="2" ry="2" />
<text  x="380.47" y="111.5" >MGSmooth Level 1</text>
</g>
<g >
<title>SFBcastEnd (2,463 samples, 0.02%)</title><rect x="615.2" y="37" width="0.2" height="15.0" fill="rgb(218,6,30)" rx="2" ry="2" />
<text  x="618.15" y="47.5" ></text>
</g>
<g >
<title>DMPlexInterp (2,322 samples, 0.02%)</title><rect x="11.4" y="165" width="0.3" height="15.0" fill="rgb(237,68,50)" rx="2" ry="2" />
<text  x="14.39" y="175.5" ></text>
</g>
<g >
<title>VecCopy (10,810 samples, 0.11%)</title><rect x="670.7" y="69" width="1.2" height="15.0" fill="rgb(205,175,30)" rx="2" ry="2" />
<text  x="673.65" y="79.5" ></text>
</g>
<g >
<title>MatMult (147,840 samples, 1.44%)</title><rect x="16.4" y="165" width="17.0" height="15.0" fill="rgb(213,222,20)" rx="2" ry="2" />
<text  x="19.44" y="175.5" ></text>
</g>
<g >
<title>VecCUDACopyFrom (5,307 samples, 0.05%)</title><rect x="958.4" y="53" width="0.6" height="15.0" fill="rgb(228,47,33)" rx="2" ry="2" />
<text  x="961.38" y="63.5" ></text>
</g>
<g >
<title>VecCUDACopyTo (1,541 samples, 0.02%)</title><rect x="1188.9" y="165" width="0.1" height="15.0" fill="rgb(214,43,22)" rx="2" ry="2" />
<text  x="1191.85" y="175.5" ></text>
</g>
<g >
<title>DMRefine (16,330 samples, 0.16%)</title><rect x="12.6" y="165" width="1.8" height="15.0" fill="rgb(206,80,32)" rx="2" ry="2" />
<text  x="15.56" y="175.5" ></text>
</g>
<g >
<title>all (10,272,203 samples, 100%)</title><rect x="10.0" y="181" width="1180.0" height="15.0" fill="rgb(224,8,2)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>VecPointwiseMult (13,726 samples, 0.13%)</title><rect x="923.4" y="53" width="1.6" height="15.0" fill="rgb(251,198,42)" rx="2" ry="2" />
<text  x="926.40" y="63.5" ></text>
</g>
<g >
<title>MGSetup Level 0 (1,437,885 samples, 14.00%)</title><rect x="682.3" y="117" width="165.2" height="15.0" fill="rgb(209,125,18)" rx="2" ry="2" />
<text  x="685.34" y="127.5" >MGSetup Level 0</text>
</g>
<g >
<title>DualSpaceSetUp (3,804 samples, 0.04%)</title><rect x="15.5" y="117" width="0.5" height="15.0" fill="rgb(219,130,54)" rx="2" ry="2" />
<text  x="18.55" y="127.5" ></text>
</g>
<g >
<title>VecAXPBYCZ (153,566 samples, 1.49%)</title><rect x="626.9" y="69" width="17.7" height="15.0" fill="rgb(252,144,21)" rx="2" ry="2" />
<text  x="629.91" y="79.5" ></text>
</g>
<g >
<title>MGSmooth Level 0 (1,090,167 samples, 10.61%)</title><rect x="252.2" y="101" width="125.3" height="15.0" fill="rgb(224,128,40)" rx="2" ry="2" />
<text  x="255.24" y="111.5" >MGSmooth Level 0</text>
</g>
<g >
<title>FESetUp (3,924 samples, 0.04%)</title><rect x="16.0" y="165" width="0.4" height="15.0" fill="rgb(250,189,16)" rx="2" ry="2" />
<text  x="18.99" y="175.5" ></text>
</g>
<g >
<title>SNESJacobianEval (1,425,575 samples, 13.88%)</title><rect x="1014.5" y="133" width="163.8" height="15.0" fill="rgb(216,111,18)" rx="2" ry="2" />
<text  x="1017.54" y="143.5" >SNESJacobianEval</text>
</g>
<g >
<title>RatelJacobianApp (394,287 samples, 3.84%)</title><rect x="121.9" y="101" width="45.3" height="15.0" fill="rgb(221,15,18)" rx="2" ry="2" />
<text  x="124.93" y="111.5" >Rate..</text>
</g>
<g >
<title>MatSetValuesCOO (125,263 samples, 1.22%)</title><rect x="1163.9" y="101" width="14.4" height="15.0" fill="rgb(233,25,34)" rx="2" ry="2" />
<text  x="1166.91" y="111.5" ></text>
</g>
<g >
<title>VecPointwiseMult (4,449 samples, 0.04%)</title><rect x="976.7" y="117" width="0.5" height="15.0" fill="rgb(234,172,29)" rx="2" ry="2" />
<text  x="979.72" y="127.5" ></text>
</g>
<g >
<title>KSPSolve (4,875,651 samples, 47.46%)</title><rect x="121.6" y="133" width="560.1" height="15.0" fill="rgb(244,62,20)" rx="2" ry="2" />
<text  x="124.59" y="143.5" >KSPSolve</text>
</g>
<g >
<title>VecNormalize (1,498 samples, 0.01%)</title><rect x="1189.0" y="165" width="0.2" height="15.0" fill="rgb(212,137,4)" rx="2" ry="2" />
<text  x="1192.03" y="175.5" ></text>
</g>
<g >
<title>DualSpaceSetUp (13,504 samples, 0.13%)</title><rect x="14.4" y="165" width="1.6" height="15.0" fill="rgb(238,185,36)" rx="2" ry="2" />
<text  x="17.44" y="175.5" ></text>
</g>
<g >
<title>SNESSolve (9,288,500 samples, 90.42%)</title><rect x="121.4" y="149" width="1067.0" height="15.0" fill="rgb(209,3,14)" rx="2" ry="2" />
<text  x="124.39" y="159.5" >SNESSolve</text>
</g>
<g >
<title>MatMult (2,073,645 samples, 20.19%)</title><rect x="378.1" y="69" width="238.2" height="15.0" fill="rgb(212,15,32)" rx="2" ry="2" />
<text  x="381.07" y="79.5" >MatMult</text>
</g>
<g >
<title>RatelJacobianApp (2,070,202 samples, 20.15%)</title><rect x="378.5" y="53" width="237.8" height="15.0" fill="rgb(251,193,3)" rx="2" ry="2" />
<text  x="381.47" y="63.5" >RatelJacobianApp</text>
</g>
<g >
<title>MGSetup Level 1 (1,001,877 samples, 9.75%)</title><rect x="847.5" y="117" width="115.1" height="15.0" fill="rgb(250,92,39)" rx="2" ry="2" />
<text  x="850.52" y="127.5" >MGSetup Level 1</text>
</g>
<g >
<title>VecDot (1,941 samples, 0.02%)</title><rect x="1187.7" y="117" width="0.2" height="15.0" fill="rgb(252,16,29)" rx="2" ry="2" />
<text  x="1190.65" y="127.5" ></text>
</g>
<g >
<title>VecAXPBYCZ (3,445 samples, 0.03%)</title><rect x="1187.1" y="101" width="0.4" height="15.0" fill="rgb(248,82,23)" rx="2" ry="2" />
<text  x="1190.08" y="111.5" ></text>
</g>
<g >
<title>VecAXPY (26,516 samples, 0.26%)</title><rect x="671.9" y="117" width="3.0" height="15.0" fill="rgb(229,59,21)" rx="2" ry="2" />
<text  x="674.90" y="127.5" ></text>
</g>
<g >
<title>DMCreateMat (12,085 samples, 0.12%)</title><rect x="10.0" y="165" width="1.4" height="15.0" fill="rgb(218,171,44)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>VecAYPX (10,138 samples, 0.10%)</title><rect x="956.8" y="69" width="1.1" height="15.0" fill="rgb(248,192,11)" rx="2" ry="2" />
<text  x="959.77" y="79.5" ></text>
</g>
<g >
<title>MatMult (394,287 samples, 3.84%)</title><rect x="121.9" y="117" width="45.3" height="15.0" fill="rgb(246,107,3)" rx="2" ry="2" />
<text  x="124.93" y="127.5" >MatM..</text>
</g>
<g >
<title>PCApply (92,543 samples, 0.90%)</title><rect x="616.3" y="69" width="10.6" height="15.0" fill="rgb(219,135,16)" rx="2" ry="2" />
<text  x="619.28" y="79.5" ></text>
</g>
<g >
<title>MatMultAdd (219,525 samples, 2.14%; 0.00%)</title><rect x="168.4" y="85" width="25.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="171.37" y="95.5" >M..</text>
</g>
<g >
<title>MatSetPreallCOO (673,085 samples, 6.55%)</title><rect x="39.1" y="149" width="77.3" height="15.0" fill="rgb(233,201,18)" rx="2" ry="2" />
<text  x="42.06" y="159.5" >MatSetPr..</text>
</g>
</g>
</svg>
